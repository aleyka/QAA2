{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alako\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\qaa\\\\QA\\\\frontend\\\\src\\\\pages\\\\SignIn\\\\SignIn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport s from \"./SignIn.module.scss\";\nimport email from \"../../assets/email.png\";\nimport password from \"../../assets/password.png\";\nimport Layout from \"../../components/Layout/Layout\";\nimport MyInput from \"../../components/MUI/MyInput/MyInput\";\nimport MyButton from \"../../components/MUI/Buttons/MyButton/MyButton\";\nimport axios from \"axios\";\nimport { AddContext } from \"../AddContext/AddContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport Loading from \"../../components/Loading/Loading\";\nimport eye from \"../../assets/eye.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignIn = () => {\n  _s();\n  // Здесь сохраняется сообщение от сервера\n  const [message, setMessage] = useState(\"\");\n\n  // Здесь я достаю состояние загрузки, с помощи хука useContext()\n  const {\n    isLoading,\n    setIsLoading\n  } = useContext(AddContext);\n\n  // Это состояние скрытие пароля\n  const {\n    type,\n    passwordHide\n  } = useContext(AddContext);\n  const [userLogin, setUserLogin] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const navigate = useNavigate();\n\n  // Отправляем post запрос и за одно проверяется пользователь и перенапраляется на профиль\n  const verifyUser = async () => {\n    setIsLoading(false);\n    try {\n      const {\n        data\n      } = await axios.post(\"http://localhost:8080/login\", userLogin);\n      localStorage.setItem(\"token\", JSON.stringify(data.token));\n      const token = JSON.parse(localStorage.getItem(\"token\"));\n      const loginOpen = () => {\n        if (!!token) {\n          navigate(\"/\");\n        }\n      };\n      loginOpen();\n      setIsLoading(true);\n    } catch (error) {\n      setMessage(error.response.data.error);\n    }\n    setIsLoading(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: s.signIn_main,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0412\\u0445\\u043E\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.inputs_btn,\n          children: [/*#__PURE__*/_jsxDEV(MyInput, {\n            value: userLogin.email,\n            onChange: e => setUserLogin({\n              ...userLogin,\n              email: e.target.value\n            }),\n            type: \"email\",\n            placeholder: \"E-mail\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: s.input_icon,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: email,\n                alt: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n            value: userLogin.password,\n            onChange: e => setUserLogin({\n              ...userLogin,\n              password: e.target.value\n            }),\n            type: type,\n            placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: s.input_icon,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: password,\n                alt: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: s.hide_password,\n              onClick: passwordHide,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: eye,\n                alt: \"eye\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), !!message.length && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: s.message,\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 36\n          }, this), !!userLogin.email.length && !!userLogin.password.length ? /*#__PURE__*/_jsxDEV(MyButton, {\n            onClick: verifyUser,\n            style: {\n              height: 50,\n              background: \"#000000\",\n              color: \"#FFFFFF\"\n            },\n            children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(MyButton, {\n            disabled: true,\n            style: {\n              height: 50,\n              background: \"#000000\",\n              color: \"#FFFFFF\"\n            },\n            children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(SignIn, \"OkTXAwPS/UpN3cNWf5GbJ07NKzo=\", false, function () {\n  return [useNavigate];\n});\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useContext","useState","s","email","password","Layout","MyInput","MyButton","axios","AddContext","useNavigate","Loading","eye","jsxDEV","_jsxDEV","Fragment","_Fragment","SignIn","_s","message","setMessage","isLoading","setIsLoading","type","passwordHide","userLogin","setUserLogin","navigate","verifyUser","data","post","localStorage","setItem","JSON","stringify","token","parse","getItem","loginOpen","error","response","children","className","signIn_main","fileName","_jsxFileName","lineNumber","columnNumber","inputs_btn","value","onChange","e","target","placeholder","input_icon","src","alt","hide_password","onClick","length","style","height","background","color","disabled","_c","$RefreshReg$"],"sources":["C:/Users/alako/OneDrive/Рабочий стол/qaa/QA/frontend/src/pages/SignIn/SignIn.jsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport s from \"./SignIn.module.scss\";\r\nimport email from \"../../assets/email.png\";\r\nimport password from \"../../assets/password.png\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport MyInput from \"../../components/MUI/MyInput/MyInput\";\r\nimport MyButton from \"../../components/MUI/Buttons/MyButton/MyButton\";\r\nimport axios from \"axios\";\r\nimport { AddContext } from \"../AddContext/AddContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport eye from \"../../assets/eye.png\";\r\n\r\nconst SignIn = () => {\r\n  // Здесь сохраняется сообщение от сервера\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  // Здесь я достаю состояние загрузки, с помощи хука useContext()\r\n  const { isLoading, setIsLoading } = useContext(AddContext);\r\n\r\n  // Это состояние скрытие пароля\r\n  const { type, passwordHide } = useContext(AddContext);\r\n\r\n  const [userLogin, setUserLogin] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Отправляем post запрос и за одно проверяется пользователь и перенапраляется на профиль\r\n  const verifyUser = async () => {\r\n    setIsLoading(false);\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"http://localhost:8080/login\",\r\n        userLogin\r\n      );\r\n      localStorage.setItem(\"token\", JSON.stringify(data.token));\r\n      const token = JSON.parse(localStorage.getItem(\"token\"));\r\n      const loginOpen = () => {\r\n        if (!!token) {\r\n          navigate(\"/\");\r\n        }\r\n      };\r\n      loginOpen();\r\n      setIsLoading(true);\r\n    } catch (error) {\r\n      setMessage(error.response.data.error);\r\n    }\r\n    setIsLoading(true);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <section className={s.signIn_main}>\r\n        {isLoading ? (\r\n          <>\r\n            <h1>Вход</h1>\r\n            <div className={s.inputs_btn}>\r\n              <MyInput\r\n                value={userLogin.email}\r\n                onChange={(e) =>\r\n                  setUserLogin({ ...userLogin, email: e.target.value })\r\n                }\r\n                type=\"email\"\r\n                placeholder=\"E-mail\"\r\n              >\r\n                <span className={s.input_icon}>\r\n                  <img src={email} alt={\"email\"} />\r\n                </span>\r\n              </MyInput>\r\n\r\n              <MyInput\r\n                value={userLogin.password}\r\n                onChange={(e) =>\r\n                  setUserLogin({ ...userLogin, password: e.target.value })\r\n                }\r\n                type={type}\r\n                placeholder=\"Пароль\"\r\n              >\r\n                <span className={s.input_icon}>\r\n                  <img src={password} alt={\"password\"} />\r\n                </span>\r\n                <span className={s.hide_password} onClick={passwordHide}>\r\n                  <img src={eye} alt=\"eye\" />\r\n                </span>\r\n              </MyInput>\r\n              {/* Здесь проверяется присутствие сообщении от сервера */}\r\n              {!!message.length && <span className={s.message}>{message}</span>}\r\n\r\n              {/* Это сравнение проверяет на содержания инпутов и изменяет кнопки */}\r\n              {!!userLogin.email.length && !!userLogin.password.length ? (\r\n                <MyButton\r\n                  onClick={verifyUser}\r\n                  style={{\r\n                    height: 50,\r\n                    background: \"#000000\",\r\n                    color: \"#FFFFFF\",\r\n                  }}\r\n                >\r\n                  Войти\r\n                </MyButton>\r\n              ) : (\r\n                <MyButton\r\n                  disabled\r\n                  style={{\r\n                    height: 50,\r\n                    background: \"#000000\",\r\n                    color: \"#FFFFFF\",\r\n                  }}\r\n                >\r\n                  Войти\r\n                </MyButton>\r\n              )}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n      </section>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}